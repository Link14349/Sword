{"version":3,"sources":["../src/index.js"],"names":["sword","dataString","data","txt","i","value","escape","JSON","stringify","toString","get","url","cb","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","send","post","setRequestHeader","define","exports"],"mappings":"AAAA;;;;AAEA,CAAC,UAAUA,KAAV,EAAiB;AACd,aAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,YAAIC,MAAM,EAAV;AACA,aAAK,IAAIC,CAAT,IAAcF,IAAd,EAAoB;AAChB,gBAAIC,OAAO,EAAX,EAAe;AACXA,uBAAOC,IAAI,GAAX;AACH,aAFD,MAEO;AACHD,uBAAO,MAAMC,CAAN,GAAU,GAAjB;AACH;AACD,gBAAIC,QAAQH,KAAKE,CAAL,CAAZ;AACA,2BAAeC,KAAf,yCAAeA,KAAf;AACI,qBAAK,QAAL;AACIF,2BAAOG,OAAOD,KAAP,CAAP;AACA;AACJ,qBAAK,QAAL;AACIF,2BAAOG,OAAOC,KAAKC,SAAL,CAAeH,KAAf,CAAP,CAAP;AACA;AACJ,qBAAK,UAAL;AACIF,2BAAOG,OAAOD,MAAMI,QAAN,EAAP,CAAP;AACA;AACJ,qBAAK,WAAL;AACIN,2BAAOG,OAAO,WAAP,CAAP;AACA;AACJ;AACIH,2BAAOG,OAAOD,MAAMI,QAAN,EAAP,CAAP;AACA;AAfR;AAiBH;AACD,eAAON,GAAP;AACH;AACD,aAASO,GAAT,CAAaC,GAAb,EAAkBT,IAAlB,EAAwBU,EAAxB,EAA4B;AACxB,YAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,YAAIE,IAAJ,CAAS,KAAT,OAAmBJ,GAAnB,GAA0B,YAAM;AAC5B,gBAAIR,MAAMF,WAAWC,IAAX,CAAV;AACA,gBAAIC,OAAO,EAAX,EAAe,OAAO,MAAMA,GAAb;AACf,mBAAO,EAAP;AACH,SAJwB,EAAzB,EAIQ,IAJR;AAKAU,YAAIG,kBAAJ,GAAyB,YAAW;AAChC,gBAAIH,IAAII,UAAJ,IAAkB,CAAlB,IAAuBJ,IAAIK,MAAJ,IAAc,GAArC,IAA4CL,IAAIK,MAAJ,IAAc,GAA9D,EAAmE;AAAC;AAChE,oBAAIN,EAAJ,EAAQA,GAAGC,IAAIM,YAAP;AACX;AACJ,SAJD;AAKAN,YAAIO,IAAJ;AACH;AACD,aAASC,IAAT,CAAcV,GAAd,EAAmBT,IAAnB,EAAyBU,EAAzB,EAA6B;AACzB,YAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,YAAIE,IAAJ,CAAS,MAAT,EAAiBJ,GAAjB,EAAsB,IAAtB;AACAE,YAAIS,gBAAJ,CAAqB,cAArB,EAAoC,mCAApC;AACAT,YAAIG,kBAAJ,GAAyB,YAAW;AAChC,gBAAIH,IAAII,UAAJ,IAAkB,CAAlB,IAAuBJ,IAAIK,MAAJ,IAAc,GAArC,IAA4CL,IAAIK,MAAJ,IAAc,GAA9D,EAAmE;AAAC;AAChE,oBAAIN,EAAJ,EAAQA,GAAGC,IAAIM,YAAP;AACX;AACJ,SAJD;AAKAN,YAAIO,IAAJ,CAASnB,WAAWC,IAAX,CAAT;AACH;AACDF,UAAMuB,MAAN,CAAa,MAAb,EAAqB,UAACC,OAAD,EAAa;AAC9BA,gBAAQ;AACJd,oBADI,EACCW;AADD,SAAR;AAGH,KAJD;AAKH,CA5DA,CA4DCrB,KA5DD,CAAD","file":"index.js","sourcesContent":["\"use strict\";\n\n!function (sword) {\n    function dataString(data) {\n        let txt = \"\";\n        for (let i in data) {\n            if (txt == \"\") {\n                txt += i + \"=\";\n            } else {\n                txt += \"&\" + i + \"=\";\n            }\n            let value = data[i];\n            switch (typeof value) {\n                case \"string\":\n                    txt += escape(value);\n                    break;\n                case \"object\":\n                    txt += escape(JSON.stringify(value));\n                    break;\n                case \"function\":\n                    txt += escape(value.toString());\n                    break;\n                case \"undefined\":\n                    txt += escape(\"undefined\");\n                    break;\n                default:\n                    txt += escape(value.toString());\n                    break;\n            }\n        }\n        return txt;\n    }\n    function get(url, data, cb) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", `${url}${(() => {\n            let txt = dataString(data);\n            if (txt != \"\") return \"?\" + txt;\n            return \"\";\n        })()}`, true);\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4 && xhr.status == 200 || xhr.status == 304) {// 请求完成\n                if (cb) cb(xhr.responseText);\n            }\n        };\n        xhr.send();\n    }\n    function post(url, data, cb) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4 && xhr.status == 200 || xhr.status == 304) {// 请求完成\n                if (cb) cb(xhr.responseText);\n            }\n        };\n        xhr.send(dataString(data));\n    }\n    sword.define(\"Ajax\", (exports) => {\n        exports({\n            get, post\n        });\n    });\n}(sword);"]}