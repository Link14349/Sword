{"version":3,"sources":["../src/Observer.js"],"names":["TypeError","message","name","Error","define","data","key","value","change","root","keys","observe","Object","defineProperty","enumerable","configurable","get","set","v","forEach","i","unbind","k","push","Observer","console","error","__data","__ons","haveListener","emit","cb","argv"],"mappings":"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","file":"Observer.js","sourcesContent":["\"use strict\";\n\nclass TypeError extends Error {\n    constructor(message) {\n        super();\n        this.name = \"TypeError\";\n        this.message = message;\n    }\n}\n\nfunction define(data, key, value, change, root = data, keys = []) {\n    observe(value, change, root, keys);\n    Object.defineProperty(data, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => {\n            return value;\n        },\n        set: (v) => {\n            if (value != v && value && typeof value == \"object\") {\n                Object.keys(value).forEach((i) => {\n                    unbind(value, i);\n                });\n                observe(v, change, root, [...keys]);\n            }\n            value = v;\n            change(root, data, key, keys, value);\n        }\n    });\n    change(root, data, key, keys, value);\n}\nfunction unbind(data, key) {\n    if (data && typeof data == \"object\") {\n        Object.keys(data[key]).forEach((value) => {\n            unbind(data[key], value);\n        });\n    }\n    delete data[key];\n}\n\nfunction observe(data, change, root = data, keys = []) {\n    if (!data || typeof data != \"object\") return;\n    Object.keys(data).forEach((value) => {\n        let k = [...keys];\n        k.push(value);\n        define(data, value, data[value], change, root, k);\n    });\n}\n\nexport class Observer {\n    constructor(data) {\n        if (typeof data != \"object\") {\n            console.error(new TypeError(\"'data' must be an object\"));\n        }\n        this.__data = data;\n        this.__ons = { };\n    }\n    init() {\n        observe(this.__data, (root, data, key, keys, value) => {\n            if (this.haveListener(\"change\")) this.emit(\"change\", [ root, data, keys, value ]);\n            // console.log(\"改变key: '\" + key + \"', newValue: \" + value.toString());\n        });\n    }\n    on(name, cb) {\n        this.__ons[name] = cb;\n        return this;\n    }\n    emit(name, argv) {\n        this.__ons[name](...argv);\n        return this;\n    }\n    haveListener(name) {\n        return !!this.__ons[name];\n    }\n}\n\nObserver.unbind = unbind;"]}