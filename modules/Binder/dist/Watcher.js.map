{"version":3,"sources":["../src/Watcher.js"],"names":["Watcher","data","bindingData","debug","__data","__bindingData","oberver","Observer","__ons","__bindings","error","on","root","keys","value","update","bd","evalString","i","length","JSON","stringify","eval","e","console","haveListener","emit","init","Object","forEach","key","unbind","name","cb","argv","newKeys","rk","nk"],"mappings":"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","file":"Watcher.js","sourcesContent":["\"use strict\";\n\nimport { Observer } from \"./Observer\"\n\nexport class Watcher {\n    constructor(data, bindingData, debug = false) {\n        this.__data = data;\n        this.__bindingData = bindingData;\n        this.oberver = new Observer(data);\n        this.__ons = { };\n        this.__bindings = { };\n        this.debug = debug;\n        this.error = null;\n        this.oberver.on(\"change\", (root, data, keys, value, update = true) => {\n            this.error = null;\n            if (update) {\n                let bd = this.__bindingData;\n                let evalString = \"bd\";\n                for (let i = 0; i < keys.length; i++) {\n                    evalString += \"[\" + JSON.stringify(keys[i]) + \"]\";\n                }\n                if (this.__bindings[evalString]) evalString = this.__bindings[evalString];\n                evalString += \" = \" + JSON.stringify(value);\n                try {\n                    eval(evalString);\n                } catch (e) {\n                    if (this.debug) console.error(e);\n                    this.error = e;\n                }\n            }\n            // console.log(\"change: \" + keys + \": \" + value);\n            if (this.haveListener(\"change\")) {\n                this.emit(\"change\", [ root, data, keys, value ]);\n            }\n        });\n        this.oberver.init();\n        this.on(\"update\", () => {\n            Object.keys(this.__data).forEach((key) => {\n                Observer.unbind(this.__data, key);\n            });\n            this.oberver = new Observer(data);\n        });\n    }\n    on(name, cb) {\n        this.__ons[name] = cb;\n        return this;\n    }\n    emit(name, argv) {\n        this.__ons[name](...argv);\n        return this;\n    }\n    haveListener(name) {\n        return !!this.__ons[name];\n    }\n    bind(keys, newKeys) {\n        let rk = \"bd\";\n        for (let i = 0; i < keys.length; i++) {\n            rk += \"[\" + JSON.stringify(keys[i]) + \"]\";\n        }\n        let nk = \"bd\";\n        for (let i = 0; i < newKeys.length; i++) {\n            nk += \"[\" + JSON.stringify(newKeys[i]) + \"]\";\n        }\n        this.__bindings[rk] = nk;\n        if (this.error) {\n            this.emit(\"update\", [ ]);\n        }\n    }\n}"]}